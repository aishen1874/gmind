{"version":3,"sources":["../../src/core/gmind.ts","../../src/mock/baseData.ts","../../src/util/getWrapString.ts","../../src/behavior/clickSelected.js","../../src/shape/node.ts","../../src/index.tsx","../../src/util/mapTree.ts","App.tsx","index.tsx"],"names":["Gmind","constructor","cfg","console","G6","TreeGraph","id","uuidv4","name","children","isCJKCharacter","ch","cjk","NO1Unihan","NO2UFF00","NO3U2E80","NO4U3000","NO5U31C0","NO6U2F00","NO7U2FF0","NO8U3100","NO9U31A0","NO10U3040","NO11U30A0","NO12U31F0","NO13UAC00","NO14U1100","NO15U3130","NO16U1D300","NO17U4DC0","NO18UA000","NO19UA490","NO20U2800","NO21U3200","NO22U3300","NO23U2700","NO24U2600","NO25UFE10","NO26UFE30","str","RegExp","reg","getDefaultCfg","multiple","getEvents","onClick","this","e","selectedItems","graph","get","onContextmenu","onNodeMouseOver","getCurrentMode","setItemState","onEdgeMouseOver","onEdgeMouseLeave","onCanvasClick","_clearSubProcessSelected","findAll","node","subProcessList","subGroup","_clearGroupSelected","group","selected","_clearSelected","findAllByState","edge","options","style","stateStyles","hover","draw","lines","keyShape","attrs","x","y","radius","lineWidth","fontSize","opacity","isNodeShape","cursor","stroke","fill","width","height","textAlign","textBaseline","text","textColor","setState","item","rect","getAnchorPoints","Designer","designerRef","useRef","useEffect","container","modes","default","type","enableOptimize","trigger","includeEdges","brushStyle","fillOpacity","defaultNode","size","defaultEdge","layout","direction","getHeight","d","getWidth","getVGap","getHGap","targetData","mapTree","treeData","rest","target","mapCallback","Array","baseData","uuid","$div","document","styleObj","position","filter","styles","rawText","isBreakWord","lineHeight","parseFloat","words","temp","i","oneline","word","string","wrapString","getWrapString","nodes","className","ref","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8c3519f6.chunk.js","sourcesContent":["import G6 from '@antv/g6'\r\n// eslint-disable-next-line no-unused-vars\r\nimport { GraphOptions } from '@antv/g6/lib/interface/graph'\r\n\r\nexport default class Gmind extends G6.TreeGraph {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(cfg: GraphOptions) {\r\n    super(cfg)\r\n  }\r\n\r\n  getData() {\r\n    console.log('hello world')\r\n  }\r\n}\r\n","import { v4 as uuidv4 } from 'uuid'\r\n\r\nexport default {\r\n  id: uuidv4(),\r\n  name: '分析图谱',\r\n  children: [\r\n    {\r\n      id: uuidv4(),\r\n      name: '行业管理',\r\n      children: [\r\n        {\r\n          id: '11',\r\n          name:\r\n            '这是一段超长的文本这是 一段超长 的文本 这是一段超长 ，的文本这是， 一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本',\r\n          children: [\r\n            {\r\n              id: uuidv4(),\r\n              name: '资本市场服务 abcdefghijklmnopqrstuvwxyz'\r\n            },\r\n            {\r\n              id: uuidv4(),\r\n              name: '货币金融服务'\r\n            },\r\n            {\r\n              id: uuidv4(),\r\n              name: '资本市场服务'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: '12',\r\n          name:\r\n            '批发和零售业批发和零售业批发和零售业批发和   深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技world here is shen zhen shi hua yun zhong  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasheng ke ji gu fen you xian gong si股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司深圳市华云中盛科技股份有限公司',\r\n          children: [\r\n            {\r\n              id: uuidv4(),\r\n              name: '资本市场服务 abcdefghijklmnopqrstuvwxyzfajfjajfajfjajfj'\r\n            },\r\n            {\r\n              id: uuidv4(),\r\n              name: '货币金融服务'\r\n            },\r\n            {\r\n              id: uuidv4(),\r\n              name: '资本市场服务'\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          name: '制造业'\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          name: '建筑业'\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          name: '房地产业'\r\n        },\r\n        {\r\n          id: '13',\r\n          name:\r\n            '这是一段超长的文本这是 一段超长 的文本 这是一段超长 ，的文本这是， 一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本     这是一段超长的文本这是 一段超长 的文本 这是一段超长 ，的文本这是， 一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本这是一段超长的文本'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: uuidv4(),\r\n      name: '事项管理',\r\n      children: [\r\n        {\r\n          id: uuidv4(),\r\n          name: '生产经营事项'\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          name: '跨境事项'\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          name: '投资事项'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n","/*\r\n * 一个自动换行的方法，用于处理节点文本的换行\r\n * */\r\n\r\nfunction isCJKCharacter(ch: string) {\r\n  /*\r\n  参考网站：https://blog.csdn.net/iteye_4476/article/details/81652883，来源Unicode官网\r\n  CJK字符不同于其他字符，CJK字符可以在任意地方换行，不像英文字符等正常情况必须在单词后换行\r\n  截止20190725，根据我查到的资料（Unicode 5.0版），js中的Unicode为2个字节,CJK字符在2个字节的unicode中包括以下范围\r\n  //大多数情况下，可以取1.~5.来判断CJK字符\r\n  1.标准CJK文字\r\n    1.1 [\\u3400-\\u3db5] => CJK统一表意文字扩展A (发行版3.0)\r\n    1.2 [\\u4e00-\\u9fa5] => CJK统一表意文字 (发行版1.1) (常用来简单判断中文字符)\r\n    1.3 [\\u9fa6-\\u9fbb] => CJK统一表意文字 (发行版4.1)\r\n    1.4 [\\uf900-\\ufa2d] => CJK兼容文字 (发行版1.1)\r\n    1.5 [\\ufa30-\\ufa6a] => CJK兼容文字 (发行版3.2)\r\n    1.6 [\\ufa70-\\ufad9] => CJK兼容文字 (发行版4.1)\r\n    (以下两项编码超过两个字节，js中暂时不能用，但是还是写一下(js中无法使用的编码范围前面有双斜杠//标志)：\r\n    //1.7 [\\u20000-\\u2a6d6] => CJK统一表意文字扩展B (发行版3.1)\r\n    //1.8 [\\u2f800-\\u2fa1d] => CJK兼容补充 (发行版3.1))\r\n  2. [\\uff00-\\uffef] => 全角中英文标点符号、半宽片假名、半宽平假名、半宽韩文字母\r\n  3. [\\u2e80-\\u2eff] => CJK部首补充\r\n  4. [\\u3000-\\u303f] => CJK标点符号\r\n  5. [\\u31c0-\\u31ef] => CJK笔划\r\n  6. [\\u2f00-\\u2fdf] => 康熙部首\r\n  7. [\\u2ff0-\\u2fff] => 汉字结构描述字符\r\n  8. [\\u3100-\\u312f] => 注音符号\r\n  9. [\\u31a0-\\u31bf] => 注音符号(闽南语客家语扩展)\r\n  10. [\\u3040-\\u309f] => 日文平假名\r\n  11. [\\u30a0-\\u30ff] => 日文片假名\r\n  12. [\\u31f0-\\u31ff] => 日文片假名拼音扩展\r\n  13. [\\uac00-\\ud7af] => 韩文拼音\r\n  14. [\\u1100-\\u11ff] => 韩文字母\r\n  15. [\\u3130-\\u318f] => 韩文兼容字母\r\n  //16. [\\u1d300-\\u1d35f] => 太玄经符号\r\n  17. [\\u4dc0-\\u4dff] => 易经六十四卦象\r\n  18. [\\ua000-\\ua48f] => 彝文音节\r\n  19. [\\ua490-\\ua4cf] => 彝文部首\r\n  20. [\\u2800-\\u28ff] => 盲文符号\r\n  21. [\\u3200-\\u32ff] => CJK字母及月份\r\n  22. [\\u3300-\\u33ff] => CJK特殊符号(日期合并)\r\n  23. [\\u2700-\\u27bf] => 装饰符号(非CJK专用)\r\n  24. [\\u2600-\\u26ff] => 杂项符号(非CJK专用)\r\n  25. [\\ufe10-\\ufe1f] => 中文竖排标点\r\n  26. [\\ufe30-\\ufe4f] => CJK兼容符号(竖排变体、下划线、顿号)\r\n  */\r\n  const cjk = {\r\n    NO1Unihan: [\r\n      '\\\\u3400-\\\\u3db5',\r\n      '\\\\u4e00-\\\\u9fa5',\r\n      '\\\\u9fa6-\\\\u9fbb',\r\n      '\\\\uf900-\\\\ufa2d',\r\n      '\\\\ufa30-\\\\ufa6a',\r\n      '\\\\ufa70-\\\\ufad9',\r\n      '',\r\n      ''\r\n    ],\r\n    NO2UFF00: ['\\\\uff00-\\\\uffef'],\r\n    NO3U2E80: ['\\\\u2e80-\\\\u2eff'],\r\n    NO4U3000: ['\\\\u3000-\\\\u303f'],\r\n    NO5U31C0: ['\\\\u31c0-\\\\u31ef'],\r\n    NO6U2F00: ['\\\\u2f00-\\\\u2fdf'],\r\n    NO7U2FF0: ['\\\\u2ff0-\\u2fff'],\r\n    NO8U3100: ['\\\\u3100-\\\\u312f'],\r\n    NO9U31A0: ['\\\\u31a0-\\\\u31bf'],\r\n    NO10U3040: ['\\\\u3040-\\\\u309f'],\r\n    NO11U30A0: ['\\\\u30a0-\\\\u30ff'],\r\n    NO12U31F0: ['\\\\u31f0-\\\\u31ff'],\r\n    NO13UAC00: ['\\\\uac00-\\\\ud7af'],\r\n    NO14U1100: ['\\\\u1100-\\\\u11ff'],\r\n    NO15U3130: ['\\\\u3130-\\\\u318f'],\r\n    NO16U1D300: [''], // \\\\u1d300-\\\\u1d35f\r\n    NO17U4DC0: ['\\\\u4dc0-\\\\u4dff'],\r\n    NO18UA000: ['\\\\ua000-\\\\ua48f'],\r\n    NO19UA490: ['\\\\ua490-\\\\ua4cf'],\r\n    NO20U2800: ['\\\\u2800-\\\\u28ff'],\r\n    NO21U3200: ['\\\\u3200-\\\\u32ff'],\r\n    NO22U3300: ['\\\\u3300-\\\\u33ff'],\r\n    NO23U2700: ['\\\\u2700-\\\\u27bf'],\r\n    NO24U2600: ['\\\\u2600-\\\\u26ff'],\r\n    NO25UFE10: ['\\\\ufe10-\\\\ufe1f'],\r\n    NO26UFE30: ['\\\\ufe30-\\\\ufe4f']\r\n  }\r\n  let reg\r\n  let str = '['\r\n  for (const k in cjk) {\r\n    str += cjk[k].join('')\r\n  }\r\n  str += ']+'\r\n  if (str !== '[]+') {\r\n    reg = new RegExp(str, 'm')\r\n    return reg.test(ch)\r\n  }\r\n  return null\r\n}\r\n\r\nfunction getWrapString(str: string, styles: any) {\r\n  // 传入的str需是能被html识别的字符串，暂不支持富文本，函数返回值也是字符串\r\n  if (!str || str.length <= 0) return ''\r\n\r\n  const $div = document.createElement('div')\r\n\r\n  const styleObj = {\r\n    position: 'absolute',\r\n    'z-index': -1,\r\n    opacity: 0,\r\n    filter: 'alpha(opacity=0)',\r\n    '-ms-filter': 'alpha(opacity=0)',\r\n    ...styles\r\n  }\r\n\r\n  for (const key in styleObj) {\r\n    $div.style[key] = styleObj[key]\r\n  }\r\n\r\n  document.body.append($div)\r\n\r\n  $div.innerText = str\r\n\r\n  // 1.1获取初步处理的字符串，即已完成空白符替换，但还未计算溢出换行。\r\n  const rawText = $div.innerText\r\n\r\n  $div.innerText = ''\r\n  $div.style.overflow = 'hidden'\r\n  $div.style.lineHeight = '1'\r\n\r\n  const isBreakWord =\r\n    ($div.style.wordWrap + $div.style.wordBreak).indexOf('break') >= 0\r\n  const lineHeight = parseFloat($div.style.fontSize) // 记录行高判断是否产生换行\r\n\r\n  // 下面将上面初步处理的字符串进行字符分割。\r\n  const words = []\r\n  const temp = rawText.split(/\\b/) // 根据单词边界进行初次分割，分割后的non-CJK字符会变成一个整体，但CJK字符需要进行二次分割\r\n  // 2.对英文单词或一串中文进行二次分割\r\n  for (let i = 0; i < temp.length; i++) {\r\n    // 将包含CJK字符的项进行单字分割后存入words数字中 //另外，如果设置了break-word则将英文单词分割为单字\r\n    if (isCJKCharacter(temp[i]) || isBreakWord) {\r\n      words.push.apply(words, temp[i].split(''))\r\n    } else {\r\n      // 不包含CJK字符的项则视为一个整体直接存进words数组\r\n      words.push(temp[i])\r\n    }\r\n  }\r\n\r\n  // 预留用一个二维数组保存计算结果，如lines=[['12',' ','中'],['asdf','哈']]则表示结果有2行，第一行为'12 中',第二行为'asdf哈'\r\n  const lines = []\r\n  let oneline = [] // oneline是一维数组，保存一行中的单词\r\n  // 3.遍历求解换行位置，即尝试向行容器中添加字符。\r\n  for (let i = 0; i < words.length; i++) {\r\n    const word = words[i]\r\n    if (word === '\\n') {\r\n      // 如果当前单词是换行符\r\n      // 则将之前的内容存为1行，并追加保存一个空行\r\n      lines.push(oneline, [])\r\n      // 清空行容器\r\n      $div.innerText = ''\r\n      // 开始记录新行\r\n      oneline = []\r\n      // 结束本次循环\r\n      continue\r\n    }\r\n    // debugger\r\n    $div.innerText = $div.innerText + word // 往行容器中增加内容\r\n    if ($div.offsetHeight <= lineHeight) {\r\n      // 如果没有产生换行\r\n      // 将当前单词或单字追加记录到oneline中\r\n      oneline.push(word)\r\n    } else {\r\n      // 如果产生了换行\r\n      // 前面的单词存为一行\r\n      lines.push(oneline)\r\n      // 清空行容器\r\n      $div.innerText = ''\r\n      // 开始记录新行\r\n      oneline = []\r\n      // 回退，在新行中尝试添加当前单词或单字\r\n      i--\r\n    }\r\n  }\r\n\r\n  // 3.1矫正，手动插入最后一行。\r\n  lines.push(oneline)\r\n  // 4.收尾工作\r\n  // 4.1将二维数组还原为字符串\r\n  let string = ''\r\n  for (let i = 0; i < lines.length; i++) {\r\n    string += lines[i].join('') + '\\n'\r\n  }\r\n  string = string.substring(0, string.length - 1)\r\n  // 4.2移除行容器\r\n  $div.remove()\r\n  // 返回计算结果\r\n\r\n  return {\r\n    wrapString: string,\r\n    lines,\r\n    fontSize: lineHeight\r\n  }\r\n\r\n  // return string\r\n}\r\n\r\nexport { isCJKCharacter }\r\nexport default getWrapString\r\n","import G6 from '@antv/g6'\r\n\r\nG6.registerBehavior('clickSelected', {\r\n  getDefaultCfg() {\r\n    return {\r\n      multiple: false\r\n    }\r\n  },\r\n  getEvents() {\r\n    return {\r\n      'node:click': 'onClick',\r\n      'node:contextmenu': 'onContextmenu',\r\n      'edge:mouseover': 'onEdgeMouseOver',\r\n      'edge:mouseleave': 'onEdgeMouseLeave',\r\n      'canvas:click': 'onCanvasClick',\r\n      'node:mouseover': 'onNodeMouseOver'\r\n    }\r\n  },\r\n  onClick(e) {\r\n    // debugger\r\n    this._clearSelected()\r\n    this.graph.setItemState(e.item, 'selected', true)\r\n    let selectedItems = this.graph.get('selectedItems')\r\n    if (!selectedItems) selectedItems = []\r\n    selectedItems = [e.item.get('id')]\r\n    this.graph.set('selectedItems', selectedItems)\r\n    this.graph.emit('afteritemselected', selectedItems)\r\n  },\r\n  onContextmenu(e) {\r\n    e.preventDefault()\r\n    this._clearSelected()\r\n    this.graph.setItemState(e.item, 'selected', true)\r\n    let selectedItems = this.graph.get('selectedItems')\r\n    if (!selectedItems) selectedItems = []\r\n    selectedItems = [e.item.get('id')]\r\n    this.graph.set('selectedItems', selectedItems)\r\n    this.graph.emit('afteritemselected', selectedItems)\r\n  },\r\n  onNodeMouseOver(e) {\r\n    if (this.graph.getCurrentMode() === 'edit')\r\n      this.graph.setItemState(e.item, 'hover', true)\r\n    else this.graph.setItemState(e.item, 'hover', false)\r\n  },\r\n  onEdgeMouseOver(e) {\r\n    if (this.graph.getCurrentMode() === 'edit' && !e.item.hasState('selected'))\r\n      this.graph.setItemState(e.item, 'hover', true)\r\n  },\r\n  onEdgeMouseLeave(e) {\r\n    if (this.graph.getCurrentMode() === 'edit' && !e.item.hasState('selected'))\r\n      this.graph.setItemState(e.item, 'hover', false)\r\n  },\r\n  onCanvasClick() {\r\n    this._clearSelected()\r\n  },\r\n  _clearSubProcessSelected() {\r\n    const subProcessList = this.graph.findAll('node', (node) => {\r\n      if (node.get('model')) {\r\n        const clazz = node.get('model').clazz\r\n        return clazz === 'subProcess'\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    subProcessList.forEach((node) => {\r\n      const group = node.getContainer()\r\n      const subGroup = group.subGroup\r\n      this._clearGroupSelected(subGroup)\r\n    })\r\n  },\r\n  _clearGroupSelected(group) {\r\n    const selected = group.findAll((subGroup) => {\r\n      const node = subGroup.get('item')\r\n      if (node) {\r\n        return node.hasState('selected')\r\n      } else {\r\n        return false\r\n      }\r\n    })\r\n    selected.forEach((subGroup) => {\r\n      const node = subGroup.get('item')\r\n      if (node) {\r\n        node.setState('selected', false)\r\n      }\r\n    })\r\n  },\r\n  _clearSelected() {\r\n    let selected = this.graph.findAllByState('node', 'selected')\r\n    selected.forEach((node) => {\r\n      this.graph.setItemState(node, 'selected', false)\r\n    })\r\n    selected = this.graph.findAllByState('edge', 'selected')\r\n    selected.forEach((edge) => {\r\n      this.graph.setItemState(edge, 'selected', false)\r\n    })\r\n    this._clearSubProcessSelected()\r\n    this.graph.set('selectedItems', [])\r\n    this.graph.emit('afteritemselected', [])\r\n  }\r\n})\r\n","import G6 from '@antv/g6'\r\n// import { ellipsisString } from '../util/util'\r\n// import getWrapString from '../util/getWrapString'\r\n\r\nG6.registerNode(\r\n  'base-node',\r\n  {\r\n    options: {\r\n      style: {},\r\n      stateStyles: {\r\n        hover: {},\r\n        selected: {}\r\n      }\r\n    },\r\n    draw(cfg, group) {\r\n      // @ts-ignore\r\n      const { nodeType, wrapString, lines } = cfg\r\n      console.log(nodeType)\r\n\r\n      // @ts-ignore\r\n      const keyShape = group.addShape('rect', {\r\n        attrs: {\r\n          x: 0,\r\n          y: 0,\r\n          radius: 5,\r\n          lineWidth: 2,\r\n          fontSize: 12,\r\n          opacity: 1,\r\n          isNodeShape: true,\r\n          cursor: 'pointer',\r\n          stroke: '#fd6d5a',\r\n          fill: '#ffffff',\r\n          width: 180,\r\n          height: 30 + (lines.length - 1) * 16\r\n        }\r\n      })\r\n\r\n      // @ts-ignore\r\n      group.addShape('text', {\r\n        attrs: {\r\n          textAlign: 'left',\r\n          textBaseline: 'top',\r\n          x: 8,\r\n          y: 8,\r\n          text: wrapString,\r\n          fontSize: 14,\r\n          cursor: 'pointer',\r\n          isNodeShape: true,\r\n          textColor: '#000',\r\n          fill: '#000'\r\n        }\r\n      })\r\n\r\n      return keyShape\r\n    },\r\n    setState(name, value, item) {\r\n      // @ts-ignore\r\n      const group = item.getContainer()\r\n      if (name === 'selected') {\r\n        const rect = group.getChildByIndex(0)\r\n\r\n        if (value) {\r\n          // @ts-ignore\r\n          rect.originStroke = rect.attrs.stroke\r\n          rect.attr('stroke', '#22a4fb')\r\n        } else {\r\n          // @ts-ignore\r\n          if (rect.originStroke) {\r\n            // @ts-ignore\r\n            rect.attr('stroke', rect.originStroke)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    getAnchorPoints: function getAnchorPoints() {\r\n      return [\r\n        [0, 0.5],\r\n        [1, 0.5]\r\n      ]\r\n    }\r\n  },\r\n  'single-node'\r\n)\r\n","import React, { useEffect, useRef } from 'react'\r\nimport Gmind from './core/gmind'\r\nimport baseData from './mock/baseData'\r\nimport mapTree from './util/mapTree'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport getWrapString from './util/getWrapString'\r\n\r\nimport styles from './styles.module.css'\r\nimport './style/tooltip.css'\r\n\r\nimport './behavior/clickSelected'\r\nimport './shape/node'\r\n\r\nlet graph: any = null\r\n\r\nexport const Designer = () => {\r\n  const designerRef = useRef(null)\r\n  // const designerDom = designerRef.current\r\n\r\n  function bindEvents() {\r\n    graph.on('nodeselectchange', (e: any) => {\r\n      const {\r\n        selectedItems: { nodes }\r\n      } = e\r\n      console.log(nodes[0])\r\n      debugger\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n\r\n    graph = new Gmind({\r\n      container: 'gmind-designer',\r\n      width: 1600,\r\n      height: 700,\r\n      modes: {\r\n        default: [\r\n          {\r\n            type: 'drag-canvas',\r\n            enableOptimize: true\r\n          },\r\n          'zoom-canvas',\r\n          'click-select',\r\n          // 框选\r\n          {\r\n            type: 'brush-select',\r\n            trigger: 'shift',\r\n            includeEdges: false,\r\n            // @ts-ignore\r\n            brushStyle: {\r\n              stroke: '#18a0fb',\r\n              fill: '#18a0fb',\r\n              fillOpacity: 0.2,\r\n              lineWidth: 0.3\r\n            }\r\n          },\r\n          // 展开收起\r\n          // {\r\n          //   type: 'collapse-expand',\r\n          //   trigger: 'click',\r\n          //   onChange: (item, collapsed) => {\r\n          //     // @ts-ignore\r\n          //     const data = item.get('model').data\r\n          //     data.collapsed = collapsed\r\n          //     return true\r\n          //   }\r\n          // }\r\n        ]\r\n      },\r\n      defaultNode: {\r\n        type: 'base-node',\r\n        size: [200, 100]\r\n      },\r\n      defaultEdge: {\r\n        type: 'cubic-horizontal',\r\n        style: {\r\n          stroke: '#A3B1BF'\r\n        }\r\n      },\r\n      layout: {\r\n        type: 'mindmap',\r\n        direction: 'LR', // H / V / LR / RL / TB / BT\r\n        // 指定节点 ID\r\n        // getId: function getId() {\r\n        //   return uuidv4()\r\n        // },\r\n        // 指定节点高度\r\n        getHeight: function getHeight(d: { lines: any[] }) {\r\n          if (d.lines.length > 0) {\r\n            return 40 + (d.lines.length - 1) * 16\r\n          }\r\n          return 40\r\n        },\r\n        // 指定节点宽度\r\n        getWidth: function getWidth() {\r\n          // debugger\r\n          return 50\r\n        },\r\n        // 指定节点之间的垂直间距\r\n        getVGap: function getVGap() {\r\n          // debugger\r\n          return 5\r\n        },\r\n        // 指定节点之间的水平间距\r\n        getHGap: function getHGap() {\r\n          // debugger\r\n          return 130\r\n        }\r\n      }\r\n    })\r\n\r\n    const targetData = mapTree(baseData, function (item: any) {\r\n      return {\r\n        ...item,\r\n        uuid: uuidv4(),\r\n        ...getWrapString(item.name, {\r\n          'font-size': '14px',\r\n          width: '160px',\r\n          'word-wrap': 'break-word'\r\n        })\r\n      }\r\n    })\r\n\r\n    graph.data(targetData)\r\n    graph.render()\r\n    graph.fitView()\r\n    graph.zoomTo(1, {\r\n      x: 1600 / 2,\r\n      y: 700 / 2\r\n    })\r\n\r\n    bindEvents()\r\n  }, [])\r\n  return (\r\n    <div\r\n      className={styles['gmind-designer']}\r\n      id='gmind-designer'\r\n      ref={designerRef}\r\n    />\r\n  )\r\n}\r\n","// 树形结构的 map 方法\r\nfunction mapTree(treeData: any, mapCallback: any) {\r\n  const { children, ...rest } = treeData\r\n\r\n  const target: any = {\r\n    ...mapCallback(rest)\r\n  }\r\n\r\n  if (children && Array.isArray(children) && children.length > 0) {\r\n    target.children = []\r\n    children.forEach((item) => {\r\n      target.children.push(mapTree(item, mapCallback))\r\n    })\r\n  }\r\n  return target\r\n}\r\n\r\nexport default mapTree\r\n","import React from 'react'\r\nimport './App.css'\r\n\r\nimport { Designer } from 'gmind'\r\nimport 'gmind/dist/index.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <Designer />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}